# Generated by Django 5.2.4 on 2025-09-08 18:10

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="ClimateParameter",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "parameter",
                    models.CharField(
                        choices=[
                            ("air_frost", "Air Frost"),
                            ("raindays", "Rain Days â‰¥1mm"),
                            ("rainfall", "Rainfall"),
                            ("sunshine", "Sunshine"),
                            ("tmean", "Mean Temperature"),
                            ("tmin", "Minimum Temperature"),
                            ("tmax", "Maximum Temperature"),
                        ],
                        help_text="The type of climate parameter.",
                        max_length=20,
                    ),
                ),
            ],
            options={
                "indexes": [
                    models.Index(
                        fields=["parameter"], name="climate_cli_paramet_bcfa00_idx"
                    )
                ],
            },
        ),
        migrations.CreateModel(
            name="ClimateRegion",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "region",
                    models.CharField(
                        choices=[
                            ("UK", "UK"),
                            ("England", "England"),
                            ("Wales", "Wales"),
                            ("Scotland", "Scotland"),
                            ("Northern_Ireland", "Northern Ireland"),
                            ("England_and_Wales", "England and Wales"),
                            ("England_N", "England North"),
                            ("England_S", "England South"),
                            ("Scotland_N", "Scotland North"),
                            ("Scotland_E", "Scotland East"),
                            ("Scotland_W", "Scotland West"),
                            ("England_E_and_NE", "England East and NE"),
                            ("England_NW_and_N_Wales", "England NW and North Wales"),
                            ("Midlands", "Midlands"),
                            ("East_Anglia", "East Anglia"),
                            ("England_SW_and_S_Wales", "England SW and South Wales"),
                            (
                                "England_SE_and_Central_S",
                                "England SE and Central South",
                            ),
                        ],
                        help_text="Select the geographical region.",
                        max_length=50,
                    ),
                ),
            ],
            options={
                "indexes": [
                    models.Index(
                        fields=["region"], name="climate_cli_region_6256ba_idx"
                    )
                ],
            },
        ),
        migrations.CreateModel(
            name="ClimateRecord",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "year",
                    models.PositiveIntegerField(
                        help_text="The year this climate data refers to."
                    ),
                ),
                ("created_on", models.DateTimeField(auto_now_add=True)),
                ("updated_on", models.DateTimeField(auto_now=True)),
                (
                    "parameter",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="climate.climateparameter",
                    ),
                ),
                (
                    "region",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="climate.climateregion",
                    ),
                ),
            ],
            options={
                "verbose_name": "Climate Record",
                "verbose_name_plural": "Climate Records",
            },
        ),
        migrations.CreateModel(
            name="ClimateSeason",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "season",
                    models.CharField(
                        choices=[
                            ("win", "Winter"),
                            ("spr", "Spring"),
                            ("sum", "Summer"),
                            ("aut", "Autumn"),
                            ("ann", "Annual"),
                        ],
                        help_text="Season for the climate data",
                        max_length=3,
                    ),
                ),
                ("data", models.FloatField(blank=True, null=True)),
                (
                    "record",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="season_data",
                        to="climate.climaterecord",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ClimateMonthly",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "month",
                    models.PositiveSmallIntegerField(
                        choices=[
                            ("1", "January"),
                            ("2", "February"),
                            ("3", "March"),
                            ("4", "April"),
                            ("5", "May"),
                            ("6", "June"),
                            ("7", "July"),
                            ("8", "August"),
                            ("9", "September"),
                            ("10", "October"),
                            ("11", "November"),
                            ("12", "December"),
                        ],
                        help_text="The month of the data, from 1 (January) to 12 (December).",
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(12),
                        ],
                    ),
                ),
                ("data", models.FloatField(blank=True, null=True)),
                (
                    "record",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="monthly_data",
                        to="climate.climaterecord",
                    ),
                ),
            ],
            options={
                "indexes": [
                    models.Index(
                        fields=["record", "month"],
                        name="climate_cli_record__101649_idx",
                    )
                ],
                "constraints": [
                    models.UniqueConstraint(
                        fields=("record", "month"), name="unique_record_month"
                    )
                ],
            },
        ),
        migrations.AddIndex(
            model_name="climaterecord",
            index=models.Index(
                fields=["region"], name="climate_cli_region__50e977_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="climaterecord",
            index=models.Index(
                fields=["parameter"], name="climate_cli_paramet_03c879_idx"
            ),
        ),
        migrations.AddConstraint(
            model_name="climaterecord",
            constraint=models.UniqueConstraint(
                fields=("parameter", "region", "year"),
                name="unique_parameter_region_year",
            ),
        ),
        migrations.AddIndex(
            model_name="climateseason",
            index=models.Index(
                fields=["record", "season"], name="climate_cli_record__8ca570_idx"
            ),
        ),
        migrations.AddConstraint(
            model_name="climateseason",
            constraint=models.UniqueConstraint(
                fields=("season", "record"), name="unique_season_record"
            ),
        ),
    ]
